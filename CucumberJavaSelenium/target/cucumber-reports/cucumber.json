[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-07-29T01:31:40.315Z",
        "line": 3,
        "name": "Check login is successful with valid credentials",
        "description": "",
        "id": "feature-to-test-login-funactionality;check-login-is-successful-with-valid-credentials",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 497000000,
              "status": "passed"
            },
            "match": {
              "location": "parallel.LoginSteps.CleanUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8745000000,
              "status": "passed"
            },
            "line": 4,
            "name": "user is on login page",
            "match": {
              "location": "parallel.LoginSteps.user_is_on_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 288000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters username and password",
            "match": {
              "location": "parallel.LoginSteps.user_enters_username_and_password()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5281000000,
              "status": "passed"
            },
            "line": 6,
            "name": "clicks on login button",
            "match": {
              "location": "parallel.LoginSteps.clicks_on_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 609000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user is nagivated to the home page",
            "match": {
              "location": "parallel.LoginSteps.user_is_nagivated_to_the_home_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3709000000,
              "status": "passed"
            },
            "line": 8,
            "name": "search for gift card under products",
            "match": {
              "location": "parallel.LoginSteps.search_for_gift_card_under_products()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2368000000,
              "status": "passed"
            },
            "line": 9,
            "name": "user search for customer emails display validation",
            "match": {
              "location": "parallel.LoginSteps.user_search_for_customer_emails_display_validation()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/div[6]/div/div/div/div/div[2]/div[2]/div[1]/h\"}\n  (Session info: chrome\u003d84.0.4147.105)\nFor documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element\nBuild info: version: \u00274.0.0-alpha-5\u0027, revision: \u0027b3a0d621cc\u0027\nSystem info: host: \u0027FAMILY-PC\u0027, ip: \u0027192.168.1.230\u0027, os.name: \u0027Windows 8.1\u0027, os.arch: \u0027amd64\u0027, os.version: \u00276.3\u0027, java.version: \u00271.8.0_241\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.105, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\\Users\\md\\AppData\\Local\\T...}, goog:chromeOptions: {debuggerAddress: localhost:15646}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 8551b71dba9de5cd7149b9bd5ef143dd\n*** Element info: {Using\u003dxpath, value\u003d/html/body/div[6]/div/div/div/div/div[2]/div[2]/div[1]/h}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:333)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:394)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)\r\n\tat parallel.LoginSteps.click_logout_from_the_page(LoginSteps.java:154)\r\n\tat ✽.click logout from the page(file:///C:/Users/md/eclipse-workspace/CucumberJavaSelenium/src/test/resources/parallel/login.feature:10)\r\n",
              "duration": 20955000000,
              "status": "failed"
            },
            "line": 10,
            "name": "click logout from the page",
            "match": {
              "location": "parallel.LoginSteps.click_logout_from_the_page()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "feature to test login funactionality",
    "description": "",
    "id": "feature-to-test-login-funactionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/parallel/login.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-07-29T01:31:40.315Z",
        "line": 3,
        "name": "Check login is successful with valid credentials",
        "description": "",
        "id": "feature-to-test-login-funactionality;check-login-is-successful-with-valid-credentials",
        "after": [
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchWindowException: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome\u003d84.0.4147.105)\nBuild info: version: \u00274.0.0-alpha-5\u0027, revision: \u0027b3a0d621cc\u0027\nSystem info: host: \u0027FAMILY-PC\u0027, ip: \u0027192.168.1.230\u0027, os.name: \u0027Windows 8.1\u0027, os.arch: \u0027amd64\u0027, os.version: \u00276.3\u0027, java.version: \u00271.8.0_241\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.105, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\\Users\\md\\AppData\\Local\\T...}, goog:chromeOptions: {debuggerAddress: localhost:15643}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}\nSession ID: 6789d4b94e6264a49ffc386eb1ee03c2\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:639)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:643)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:303)\r\n\tat parallel.LoginSteps.CleanUp(LoginSteps.java:28)\r\n",
              "duration": 15000000,
              "status": "failed"
            },
            "match": {
              "location": "parallel.LoginSteps.CleanUp(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8716000000,
              "status": "passed"
            },
            "line": 4,
            "name": "user is on login page",
            "match": {
              "location": "parallel.LoginSteps.user_is_on_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 292000000,
              "status": "passed"
            },
            "line": 5,
            "name": "user enters username and password",
            "match": {
              "location": "parallel.LoginSteps.user_enters_username_and_password()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4253000000,
              "status": "passed"
            },
            "line": 6,
            "name": "clicks on login button",
            "match": {
              "location": "parallel.LoginSteps.clicks_on_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 678000000,
              "status": "passed"
            },
            "line": 7,
            "name": "user is nagivated to the home page",
            "match": {
              "location": "parallel.LoginSteps.user_is_nagivated_to_the_home_page()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2959000000,
              "status": "passed"
            },
            "line": 8,
            "name": "search for gift card under products",
            "match": {
              "location": "parallel.LoginSteps.search_for_gift_card_under_products()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: Cannot locate an element using xpath\u003d//*[@id\u003d\"SearchEmail\"]\nFor documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element\nBuild info: version: \u00274.0.0-alpha-5\u0027, revision: \u0027b3a0d621cc\u0027\nSystem info: host: \u0027FAMILY-PC\u0027, ip: \u0027192.168.1.230\u0027, os.name: \u0027Windows 8.1\u0027, os.arch: \u0027amd64\u0027, os.version: \u00276.3\u0027, java.version: \u00271.8.0_241\u0027\nDriver info: driver.version: RemoteWebDriver\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:336)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:451)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:394)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:325)\r\n\tat parallel.LoginSteps.user_search_for_customer_emails_display_validation(LoginSteps.java:127)\r\n\tat ✽.user search for customer emails display validation(file:///C:/Users/md/eclipse-workspace/CucumberJavaSelenium/src/test/resources/parallel/login2.feature:9)\r\n",
              "duration": 18629000000,
              "status": "failed"
            },
            "line": 9,
            "name": "user search for customer emails display validation",
            "match": {
              "location": "parallel.LoginSteps.user_search_for_customer_emails_display_validation()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "click logout from the page",
            "match": {
              "location": "parallel.LoginSteps.click_logout_from_the_page()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "feature to test login funactionality",
    "description": "",
    "id": "feature-to-test-login-funactionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/parallel/login2.feature",
    "tags": []
  }
]